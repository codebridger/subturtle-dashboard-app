name: Deploy on EC2 From ECR Registry
on:
  push:
    branches:
      - master

  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: me-south-1 # Bahrain region
  AWS_CONTAINER_REGISTRY: subturtle
  IMAGE_TAG: dashboard-lastest
  GIGET_AUTH_TOKEN: ${{ secrets.GIGET_AUTH_TOKEN }}
  NUXT_API_URL: ${{ vars.NUXT_API_URL }}

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Create env file
      # This file goes to docker and used in building the image
      - name: Create .env file
        run: |
          echo "NUXT_API_URL=${NUXT_API_URL}" > .env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.AWS_CONTAINER_REGISTRY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG --build-arg GIGET_AUTH_TOKEN=${GIGET_AUTH_TOKEN} .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
